name: Deploy Serverless SteamDev

on:
  push:
    branches:
      - steam_ev_dev

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install, build, and test example
        run: |
          npm install --production=false
      - name: Build Layer 1
        run: |
          cd layers/axios/nodejs
          npm install --production=false
          cd ..
          zip -r ../../layer-dist/layer1.zip nodejs/package.json nodejs/package-lock.json nodejs/node_modules
      - name: serverless deploy
        uses: serverless/github-action@v3.1
        with:
          args: deploy --stage dev
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.steam_aws_access_key_id }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.steam_aws_secret_access_key }}
  # sonarqube:
  #   name: sonarqube
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
  #     - uses: sonarsource/sonarqube-scan-action@master
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

